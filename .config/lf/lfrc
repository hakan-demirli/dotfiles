# https://codeberg.org/tplasdio/lf-config
# Main options
set icons
set period 1
#set relativenumber
#set number
set hidden!
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set previewer ~/.config/lf/lf_kitty_preview
set cleaner ~/.config/lf/lf_kitty_clean
set promptfmt "
\033[48;2;35;38;39;38;2;28;220;156m 󰣇
\033[38;2;35;38;39;48;2;202;31;31m
\033[38;2;202;31;31;48;2;40;47;62m
\033[38;2;255;255;255m %w
\033[38;2;40;47;62;48;2;58;67;89m
\033[38;2;255;255;255m %f
\033[;38;2;58;67;89;49m\033[m"
set incsearch
set incfilter
#set globsearch on
set ratios 2:3:4 # 2:3:7:7
set truncatechar "…"
set waitmsg "\033[1;31m⏎\033[m"
set timefmt "02/01/2006 15:04:05 "
set infotimefmtnew '02/01 15:04'
set infotimefmtold '02/01/06'
set errorfmt "\033[1;31m"
set numberfmt "\033[38;2;75;87;116m"
set dircounts
set tabstop 4
set scrolloff 5
set wrapscroll
set shellopts '-eu'
set ifs "\n"
set shell "bash"
set ruler 'df:acc:progress:selection:filter:ind'
set cursorpreviewfmt "\033[7m"
set info size

# use mimetype xdg-open for everything
# source '~/.config/lf/opener'

%test $LF_LEVEL -eq 1 || >&2 printf "Warning: You're in a nested lf instance!"


cmd touch $touch -p "$(echo $* | tr ' ' '\ ')"

cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  forbidden_files=("$HOME/Desktop/np" "$HOME/Desktop/dotfiles" "$HOME/Desktop/mibench" "$HOME/Desktop/qmk")
  
  while [ "$files" ]; do
    file=${files%%;*}
    
    for forbidden_file in "${forbidden_files[@]}"; do
      if [ "$file" = "$forbidden_file" ]; then
        echo "You don't want this"
        exit
      fi
    done

    echo "$file"
    trash-put "$(basename "$file")"

    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd delete_for_real ${{
  files=$(printf "$fx" | tr '\n' ';')
  forbidden_files=("$HOME/Desktop/np" "$HOME/Desktop/dotfiles" "$HOME/Desktop/mibench" "$HOME/Desktop/qmk")
  
  while [ "$files" ]; do
    file=${files%%;*}
    
    for forbidden_file in "${forbidden_files[@]}"; do
      if [ "$file" = "$forbidden_file" ]; then
        echo "You don't want this"
        exit
      fi
    done

    echo "$file"
    rm -rf  "$(basename "$file")"

    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd extract ${{
	folder_name="${fx%.*}"  # Extracts the folder name without the extension
	mkdir -p "$folder_name" # Create the folder if it doesn't exist
	unar "$fx" -o "$folder_name"
}}


cmd follow_link %{{
	lf -remote "send ${id} select \"$(readlink $f)\""
}}



cmd music ${{
    # multi file or current file
    mpv $fx
}}

cmd ripdrag %ripdrag -a -x $fx

cmd mount_mtp ${{
	mkdir -p /tmp/amtp 
	aft-mtp-mount /tmp/amtp 
}}


cmd yank_path &{{
	printf "%s" "${f}" | wl-copy
}}


cmd q quit


# Keymaps
map y copy
map c cut
map p paste
map x :toggle;down  
map <esc>   :unselect; clear

# map m music
map e

map <space>
map <space>d ripdrag
map <space>m mount_mtp
map <space>x extract
map <space>D push %mkdir<space>
map <space>F push %touch<space>
map <space>c push :zip<space>
map <space>y yank_path

map d
map dd trash
map dk delete_for_real


map t :maps


# Navigation
# Goto
map ga cd ~/.local/share/cell/
map gl follow_link
map ge bottom
map gd cd ~/Downloads
map gc cd ~/.config
map gr cd /mnt/second/rep
map gm cd /tmp/mtp
# map gm cd /run/user/1000/gvfs

# Bookmark
map bd cd ~/Desktop/dotfiles
map bs cd /mnt/second/school
map bp cd /mnt/second/rep/personal_repo
map bt cd /mnt/second/rep/personal_repo/notes/personal_notes/todo
