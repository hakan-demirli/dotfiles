#
# Monitors & workspaces: nwg-displays generates 2 files, which we include here:
#
source = ~/.config/hypr/monitors.conf
source = ~/.config/hypr/workspaces.conf

#
# Autostart. Feel free to add your own entries.
# Shell components will be started in the includes.conf file, which we include below.
#

#
# Include settings generated by nwg-shell-config
#
source = ~/.config/hypr/includes.conf

#
# All the settings below are up to you. We don't touch them in the shell config utility.
#

# Some default env vars.t
env = XCURSOR_SIZE,24

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    rounding = 5
    # blur = true
    # blur_size = 3
    # blur_passes = 1
    # blur_new_optimizations = true

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

gestures {
    # See https://wiki.hyprland.org/Configuring/workspace_swipe_fingersVariables/ for more
    workspace_swipe = true
    workspace_swipe_fingers = 4
    workspace_swipe_distance = 100
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
# device:epic-mouse-v1 {
#     sensitivity = -0.5
# }


# See https://wiki.hyprland.org/Configuring/Window-Rules/
# Windowrules
# `hyprctl clients` to get window names
windowrulev2 = float,class:(dialog),title:(Choose symbol)

windowrulev2 = float,class:(zenity) # wine prefix

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# We've defined $term, $editor and so on in includes.conf.
bind = ALT_L, W, exec, $browser
bind = ALT_L, E, exec, $filemanager
bind = ALT_L, T, exec, $term
bind = SHIFT CTRL, escape, exec, gnome-system-monitor
bind = ALT, F4, killactive,

# Launch apps
bindr= SUPER, SUPER_L, exec, pkill wofi || wofi -S drun -I -G -M fuzzy -i --xoffset=1470 --width=400
bind = $mainMod, escape, exec, $locker

bind = $mainMod, Z, togglespecialworkspace          # show/hide special workspace
bind = $mainMod, Tab, focuscurrentorlast
bind = ALT     , Tab, focuscurrentorlast
bind = $mainMod, A, togglesplit

bind = $mainMod, P, pseudo,                         # (dwindle)
bind = $mainMod, S, layoutmsg, swapwithmaster       # (master)
bind = $mainMod, D, layoutmsg, cyclenext            # (master)


# SCREENSHOT (/usr/local/bin/screenshot)
# bind = , Print, exec, screenshot fullscreen                           # full screen
# bind = CONTROL, Print, exec, screenshot display                       # focused display
# bind = $mainMod SHIFT+CONTROL, Print, exec, screenshot focused        # focused window
# bind = SHIFT+CONTROL, Print, exec, grim -g "$(slurp)" - | swappy -f - # selected region -> swappy
# bind = SHIFT+CONTROL, Print, exec, screenshot region                # or selected region w/o swappy
bind =  , Print, exec, hyprshot -m region                # or selected region w/o swappy

# Special Keys
bindl = , XF86AudioRaiseVolume , exec, pactl set-sink-volume @DEFAULT_SINK@ +5%
bindl = , XF86AudioLowerVolume , exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bindl = , XF86AudioMute        , exec, pactl set-sink-mute @DEFAULT_SINK@ toggle
bindl = , XF86AudioMicMute     , exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindl = , XF86MonBrightnessDown, exec, brightnessctl s 10%- # light -U 5
bindl = , XF86MonBrightnessUp  , exec, brightnessctl s 10%+ # light -A 5
bindl = , XF86AudioPlay        , exec, playerctl play-pause
bindl = , XF86AudioNext        , exec, playerctl next
bindl = , XF86AudioPrev        , exec, playerctl previous
bindl = , XF86ScreenSaver      , exec, dpms_status=$(hyprctl monitors -j | jq -r ".[].dpmsStatus") && [[ "$dpms_status" = "true" ]] && hyprctl dispatch dpms off || hyprctl dispatch dpms on



# Control mainMod
bind = $mainMod SHIFT, Space, togglefloating,
bind = $mainMod      , Q, killactive,               # Exception
bind = $mainMod SHIFT, F, fullscreen
bind = $mainMod SHIFT, C, exec, hyprctl reload      # reload Hyprland
bind = $mainMod SHIFT, Z, movetoworkspace, special  # move to the special workspace
bind = $mainMod SHIFT, F4, exit, # kills hyprland


# MOVE FOCUS with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus,d
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d


# MOVE WINDOW with mainMod SHIFT + arrow/vim keys
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d
binde = $mainMod SHIFT, L, resizeactive, 20 0
binde = $mainMod SHIFT, H, resizeactive, -20 0
binde = $mainMod SHIFT, K, resizeactive, 0 -20
binde = $mainMod SHIFT, J, resizeactive, 0 20

# SWITCH WORKSPACES with mainMod + [0-9]
bind = ALT_L, z, workspace, 1
bind = ALT_L, x, workspace, 2
bind = ALT_L, c, workspace, 3
bind = ALT_L, v, workspace, 4
bind = ALT_L, b, workspace, 5
bind = ALT_R, n, workspace, 6
bind = ALT_R, m, workspace, 7
bind = ALT_R, comma, workspace, 8
bind = ALT_R, period, workspace, 9
bind = ALT_R, slash, workspace, 10

# MOVE ACTIVE WINDOW TO A WORKSPACE with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# SCROLL THROUGH EXISTING WORKSPACES with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# MOVE/RESIZE WINDOWS with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow






# Don't use submap. It can't bind regular keys
# Use Xremap: yay -S xremap-hypr-bin

#### bind=ALT,I,submap,resize
#### submap=resize
#### bind=,right,resizeactive,10 0
#### bind=ALT,I,submap,reset
#### bind=,KP_Return, exec, YDOTOOL_SOCKET=/run/user/1001/.# ydotool_socket ydotool key 28:1 28:0
#### # Get the codes from /usr/include/linux/input-event-codes.h
#### # Also install ydotool and start the service with systemd
#### bind=,right,submap,reset
#### submap=reset

