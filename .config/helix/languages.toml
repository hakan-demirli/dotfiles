[[language]]
name = "python"
roots = ["pyproject.toml", "."]
language-servers = [ "pyright","ruff-lsp","gpt"]
auto-format = true
# Add this to pyproject.toml in root directory of project to add extra paths.
# [tool.pyright]
# extraPaths = ["./test"]

[[language]]
name = "verilog"
auto-format = true
formatter = { command = 'verible-verilog-format', args = ["--wrap_spaces","3","--indentation_spaces","3","-"] }
language-servers = [ "dls" , "veridian", "gpt"]
indent = { tab-width = 3, unit = "   " }

[[language]]
name = "nix"
formatter = { command = 'alejandra', args = [] }
language-servers = ["nixd"]
auto-format = true

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown"] }
# auto-format = true

[[language]]
name = "toml"
auto-format = false

[[language]]
name = "cpp"
# auto-format = true
language-servers = ["clangd"]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "c"
auto-format = true
language-servers = ["clangd"]
indent = { tab-width = 4, unit = "    " }
# Diagnostics:
#   Suppress: "pp_including_mainfile_in_preamble"
# Add above codes into the .clangd file under your project directory.
# Create compile_commands.json using this: ` cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..`

[[language]]
name = "latex"
language-servers = ["texlab"]
auto-format = true

[[language]]
name = "rust"
auto-format = true
[language.formatter]
command = "rustfmt"

[[language]]
name = "gas"
scope = "source.llvm"
roots = ["Makefile"]
file-types = ["S", "s"]
comment-token = "#"
indent = { tab-width = 4, unit = "    " }
language-servers = ["asm-lsp"]
auto-format = true




[language-server.rust-analyzer.config.check]
command = "clippy"

[language-server]
clangd = { command = "clangd", args = ['--fallback-style=Webkit'] }

[language-server.texlab]
command = "texlab"
cleanArtifacts = true

[language-server.texlab.config.texlab.build]
onSave = true
forwardSearchAfter = true

[language-server.texlab.config.texlab.forwardSearch]
executable = "sioyek"
args = [
  "--execute-command",
  "turn_on_synctex",
  "%p",
  "--forward-search-file",
  "%f",
  "--forward-search-line",
  "%l",
]

[language-server.texlab.config.texlab.chktex]
onEdit = true


[language-server.veridian]
command = "veridian"

[language-server.ruff-lsp]
command = "ruff-lsp"




[language-server.dls]
command = "diagnostic-languageserver"
args = [ "--stdio", "--log-level=2" ]

[language-server.dls.config.filetypes]
verilog = "verilator"
systemverilog =  "verilator"

[language-server.dls.config.linters.verilator]
command= "sh"
args= [
    "-c",
    "verilator --lint-only -Wall $(find . -type f -name '*.*' | xargs -n1 dirname | sort -u | awk '{print \"-I\" $0}') %file 2>&1 | grep %file"
]
isStdout = true
isStderr = false
sourceName = "verilator"
# onSaveOnly = true -- DLS never receives onDidSave event.
#  See:
#    https://github.com/helix-editor/helix/issues/9034
#    https://github.com/helix-editor/helix/pull/9101
debounce = 1000
formatLines = 1
formatPattern= [
    "^(%(Warning|Error)[^:]*:)?\\s*([^:]+):(\\d+):(\\d+)?:?\\s*(\\.\\.\\.)?\\s*(.*)$",
    {line = 4, column = 5, message= [ 7 ], security= 2}
]
securities= {Error = "error", Warning= "warning", undefined= "info"}



[language-server.nixd]
command = "nixd"




[language-server.gpt]
command = "helix-gpt"
args = ["--handler","codeium","--logFile","/tmp/helix-gpt.log"]

