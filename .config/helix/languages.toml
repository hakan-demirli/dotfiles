[[language]]
name = "gdscript"
language-server = { command = "nc", args = [
  "localhost",
  "6005",
], language-id = "gdscript" }
formatter = { command = "git", args = ["stripspace"] }

[[language]]
name = "python"
roots = ["pyproject.toml", "setup.py", "Poetry.lock", ".git"]
language-server = { command = "pyright-langserver", args = ["--stdio"] }
auto-format = true
formatter = { command = 'black', args = ["--quiet", "-"] }
config = ""

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "markdown"
formatter = { command = 'prettier', args = ["--parser", "markdown"] }
auto-format = true

[[language]]
name = "hcl"
formatter = { command = 'terraform', args = ["fmt", "-"] }
auto-format = true

[[language]]
name = "tfvars"
formatter = { command = 'terraform', args = ["fmt", "-"] }
auto-format = true

[[language]]
name = "ruby"
config = { solargraph = { diagnostics = true, formatting = false } }
formatter = { command = "bundle", args = [
  "exec",
  "rubocop",
  "--stdin",
  "foo.rb",
  "-a",
  "--stderr",
  "--fail-level",
  "fatal",
] }
auto-format = true

[[language]]
name = "verilog"
language-server = { command = "verible-verilog-ls", args = ["--stdio"] }
formatter = { command = 'verible-verilog-format', args = ["fmt", "-"] }
auto-format = true
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "toml"
auto-format = true

[[language]]
name = "cpp"
# config = { "clangd.fallbackFlags" = ["-std=c++20"] }
language-server = { command = "clangd", args = [
  "--compile-commands-dir=./build",
] }

# Diagnostics:
#   Suppress: "pp_including_mainfile_in_preamble"
# Add above codes into the .clangd file under your project directory.

# Create compile_commands.json using this: ` cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..`


#
