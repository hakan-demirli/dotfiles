#!/usr/bin/env bash
tmux_harpoon_update &

idx=$1
editor_command="hx"

tmux_cwd=$(pwd)
tmux_cwd_hash=$(echo -n "$tmux_cwd" | md5sum | awk '{ print $1 }')
cache_dir="$HOME/.cache/tmux_harpoon"
data_file="$cache_dir/$tmux_cwd_hash.json"

hook_to_switch=$(sed -n "${idx}p" "$data_file")
if [[ -z "$hook_to_switch" ]]; then
  exit 0
fi

# Parse the hook_to_switch to get path, col, row, tmux_session, tmux_window
IFS=':, ' read -r path col row tmux_window tmux_session tmux_command tmux_pane_path <<< "$hook_to_switch"

# shorten the path. tmux send-keys is slow
relative_path=$(realpath --relative-to="$tmux_pane_path" "$path")

# Check if editor_command is in tmux_command
if [[ "$tmux_command" == *"$editor_command"* ]]; then
  # check if window is still open in tmux
  if tmux has-session -t "$tmux_session:$tmux_window"; then
    # if window was open then just switch to it and send keys.
    tmux select-window -t "$tmux_session:$tmux_window"  2>/dev/null
    tmux send-keys -t "$tmux_session:$tmux_window" ":o $relative_path:$col:$row" C-m
  else
    # if not create a window, switch to it and open hx inside then send keys
    tmux new-window -t "$tmux_session:$tmux_window"  2>/dev/null
    tmux send-keys -t "$tmux_session:$tmux_window" "hx $relative_path:$col:$row" C-m
  fi
else
  tmux new-window -t "$tmux_session:$tmux_window" 2>/dev/null || tmux select-window -t "$tmux_session:$tmux_window"
fi

exit 0
