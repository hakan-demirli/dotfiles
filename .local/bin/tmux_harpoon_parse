#!/usr/bin/env bash

# Get tmux information
read -r tmux_session tmux_window tmux_pane tmux_command <<< "$(tmux display-message -p '#{session_name} #{window_id} #{pane_id} #{pane_current_command}')"

# Get helix information
status_line=$(tmux capture-pane -pS -  | rg -e "(?:NOR\s+|NORMAL|INS\s+|INSERT|SEL\s+|SELECT)\s+[\x{2800}-\x{28FF}]*\s+(\S*)\s[^â”‚]* (\d+):(\d+).*" -o --replace '$1 $2 $3')
read -r buffer_path cursor_row cursor_col <<< "$status_line"

# Convert ~ to $HOME
if [[ "$buffer_path" == ~* ]]; then
  buffer_path="${buffer_path/#\~/$HOME}"
fi

buffer_path=$(realpath "$buffer_path")  # Convert filename to absolute path

pwd=$(pwd)
pwd_hash=$(echo -n "$pwd" | md5sum | awk '{ print $1 }')
# basedir=$(dirname "$buffer_path")
# basename=$(basename "$buffer_path")
# basename_without_extension="${basename%.*}"
# extension="${buffer_path##*.}"

cache_dir="$HOME/.cache/helix_harpoon"
data_file="$cache_dir/$pwd_hash.json"
log_file="$cache_dir/$pwd_hash.log"

mkdir -p "$cache_dir"

# Remove empty lines from the data_file
sed -i '/^$/d' "$data_file"

# debug
# {
#   echo "status_line: $status_line";
#   echo "buffer_path: $buffer_path";
#   echo "Cursor Column: $cursor_col";
#   echo "Cursor Row: $cursor_row";
# } > "$log_file"
