#!/usr/bin/env python3

import shutil
import subprocess
import sys
from pathlib import Path

REPO_URL = "https://github.com/hakan-demirli/code_templates"
CACHE_DIR = Path.home() / ".cache" / "np_templates"
GIT = shutil.which("git") or "git"

"""
np: new project
copy a template project to current dir.
"""


def clone_repo():
    CACHE_DIR.parent.mkdir(parents=True, exist_ok=True)
    subprocess.run([GIT, "clone", "--depth", "1", REPO_URL, str(CACHE_DIR)], check=True)


def pull_repo():
    if CACHE_DIR.exists():
        try:
            subprocess.run([GIT, "-C", str(CACHE_DIR), "pull"], check=True)
            print("Cache updated.")
        except subprocess.CalledProcessError as e:
            print(f"Failed to update cache: {e}")
    else:
        print("Cache not found. Cloning...")
        clone_repo()


def run_fzf_inside_cache_and_copy():
    if not CACHE_DIR.exists():
        print("Cache not found. Run `np pull` first.")
        sys.exit(1)

    try:
        cmd = f"find -L {CACHE_DIR} -mindepth 1 -maxdepth 1 -type d -print | fzf"
        result = subprocess.run(cmd, stdout=subprocess.PIPE, shell=True)
        selected_directory = result.stdout.decode().strip()

        if selected_directory:
            selected_path = Path(selected_directory)
            dest = Path.cwd() / selected_path.name
            shutil.copytree(selected_path, dest)
            print(f"Project copied to: {dest}")
        else:
            print("No directory selected.")

    except subprocess.CalledProcessError as e:
        print(f"fzf failed: {e}")


if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "pull":
        pull_repo()
    else:
        run_fzf_inside_cache_and_copy()
